[{"D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\app\\components\\dropdown.js":"1","D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\app\\components\\ToastHandler\\index.js":"2","D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\app\\footer.js":"3","D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\app\\header.js":"4","D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\app\\main\\action\\table.js":"5","D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\app\\main\\action.js":"6","D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\app\\main\\batch.js":"7","D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\app\\main\\config.js":"8","D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\app\\main\\configs.js":"9","D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\app\\settings\\SettingsModal.js":"10","D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\app\\util\\helper.js":"11","D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\App.js":"12","D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\App.test.js":"13","D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\index.js":"14","D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\serviceWorker.js":"15","D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\setupTests.js":"16","D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\app\\main\\action\\editable-cell.js":"17"},{"size":595,"mtime":1599749077751,"results":"18","hashOfConfig":"19"},{"size":1028,"mtime":1599761676266,"results":"20","hashOfConfig":"19"},{"size":539,"mtime":1599750435861,"results":"21","hashOfConfig":"19"},{"size":1441,"mtime":1599750435861,"results":"22","hashOfConfig":"19"},{"size":3184,"mtime":1599762862746,"results":"23","hashOfConfig":"19"},{"size":2895,"mtime":1599763357170,"results":"24","hashOfConfig":"19"},{"size":2810,"mtime":1599762812131,"results":"25","hashOfConfig":"19"},{"size":4660,"mtime":1599761519503,"results":"26","hashOfConfig":"19"},{"size":3809,"mtime":1599761265823,"results":"27","hashOfConfig":"19"},{"size":6005,"mtime":1599750541006,"results":"28","hashOfConfig":"19"},{"size":211,"mtime":1599749626182,"results":"29","hashOfConfig":"19"},{"size":524,"mtime":1599750435861,"results":"30","hashOfConfig":"19"},{"size":273,"mtime":1599749626182,"results":"31","hashOfConfig":"19"},{"size":496,"mtime":1599749626182,"results":"32","hashOfConfig":"19"},{"size":5060,"mtime":1599749626183,"results":"33","hashOfConfig":"19"},{"size":254,"mtime":1599749626183,"results":"34","hashOfConfig":"19"},{"size":1035,"mtime":1599762827893,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xpfhho",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\app\\components\\dropdown.js",[],"D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\app\\components\\ToastHandler\\index.js",[],"D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\app\\footer.js",[],"D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\app\\header.js",[],"D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\app\\main\\action\\table.js",[],"D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\app\\main\\action.js",["71","72"],"import React, { useState } from 'react'\r\nimport { Card, Row, Col, Dropdown, Button } from 'react-bootstrap'\r\nimport { ReactComponent as FilterRight } from 'bootstrap-icons/icons/filter-right.svg'\r\nimport { DropdownToggle } from '../components/dropdown'\r\nimport { defaultAction } from '@dhruv-techapps/acf-common'\r\nimport ActionTable from './action/table.js'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Action = ({ actions, selected, setConfigs, toastRef }) => {\r\n\r\n  const [hiddenColumns, setHiddenColumns] = useState(['name', 'initWait', 'repeat', ' repeatInterval'])\r\n\r\n  const addAction = () => {\r\n    setConfigs(configs => configs.map((config, index) => {\r\n      if (index === selected) {\r\n        return { ...configs[selected], actions: [...configs[selected].actions, defaultAction] }\r\n      }\r\n      return config\r\n    }))\r\n\r\n    toastRef.current.push({\r\n      body: 'New action added successfully !',\r\n      header: <strong className='mr-auto'>Action</strong>,\r\n      bodyClass: 'text-success'\r\n    })\r\n  }\r\n\r\n  const onColumnChange = (e) => {\r\n    const column = e.currentTarget.getAttribute('data-column')\r\n    const index = hiddenColumns.indexOf(column);\r\n    setHiddenColumns(hiddenColumns => index !== -1 ? hiddenColumns.splice(index, 1) : hiddenColumns.push(column))\r\n  }\r\n\r\n  const updateAction = (rowIndex, columnId, value) => {\r\n    // We also turn on the flag to not reset the page\r\n    console.log(rowIndex, columnId, value)\r\n  }\r\n\r\n  return <Card>\r\n    <Card.Header as='h5'>\r\n      <Row>\r\n        <Col className='d-flex align-items-center'>\r\n          <a target='_blank' rel='noopener noreferrer' href='https://getautoclicker.com/docs/action'>Action</a>\r\n        </Col>\r\n        <Col md='auto' className='d-flex align-items-center'>\r\n          <Button variant='success' onClick={addAction}>Add Action</Button>\r\n          <Dropdown alignRight className='ml-2'>\r\n            <Dropdown.Toggle as={DropdownToggle}>\r\n              <FilterRight width='28' height='28' />\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={onColumnChange} data-column='name'>Name</Dropdown.Item>\r\n              <Dropdown.Item onClick={onColumnChange} data-column='initWait'>Init Wait</Dropdown.Item>\r\n              <Dropdown.Item onClick={onColumnChange} data-column='repeat'>Repeat &amp; R-interval</Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <ActionTable actions={actions} updateAction={updateAction} hiddenColumns={hiddenColumns} />\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nAction.propTypes = {\r\n  actions: ActionTable.propTypes.actions,\r\n  selected: PropTypes.number.isRequired,\r\n  setConfigs: PropTypes.func.isRequired,\r\n  toastRef: PropTypes.shape({ current: PropTypes.shape({ push: PropTypes.func.isRequired }) }).isRequired\r\n}\r\nexport default Action\r\n","D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\app\\main\\batch.js",[],"D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\app\\main\\config.js",[],"D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\app\\main\\configs.js",[],"D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\app\\settings\\SettingsModal.js",[],"D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\app\\util\\helper.js",[],"D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\App.js",[],"D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\App.test.js",[],"D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\index.js",[],"D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\serviceWorker.js",[],"D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\setupTests.js",[],"D:\\Github\\auto-click-auto-fill\\acf-options_page\\src\\app\\main\\action\\editable-cell.js",[],{"ruleId":"73","severity":2,"message":"74","line":9,"column":65,"nodeType":"75","fix":"76"},{"ruleId":"77","severity":2,"message":"78","line":30,"column":48,"nodeType":"79","endLine":30,"endColumn":49,"fix":"80"},"padded-blocks","Block must not be padded by blank lines.","BlockStatement",{"range":"81","text":"82"},"babel/semi","Extra semicolon.","VariableDeclaration",{"range":"83","text":"84"},[462,466],"\n",[1163,1187],")\r\n    setHiddenColumns"]